// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------



public partial class MainWindow {
    
    private Gtk.Action File;
    
    private Gtk.Action Exit;
    
    private Gtk.Action Run;
    
    private Gtk.Action MotionModel;
    
    private Gtk.Action SingleStereoRayModel;
    
    private Gtk.Action StereoRaysAtVariousRanges;
    
    private Gtk.Action GaussianFunction;
    
    private Gtk.Action SensorModelLookupGraphs;
    
    private Gtk.Action PathPlanner;
    
    private Gtk.VBox vbox1;
    
    private Gtk.MenuBar menubar1;
    
    private Gtk.Image imgOutput;
    
    protected virtual void Build() {
        Stetic.Gui.Initialize(this);
        // Widget MainWindow
        Gtk.UIManager w1 = new Gtk.UIManager();
        Gtk.ActionGroup w2 = new Gtk.ActionGroup("Default");
        this.File = new Gtk.Action("File", Mono.Unix.Catalog.GetString("File"), null, null);
        this.File.ShortLabel = Mono.Unix.Catalog.GetString("File");
        w2.Add(this.File, null);
        this.Exit = new Gtk.Action("Exit", Mono.Unix.Catalog.GetString("Exit"), null, null);
        this.Exit.ShortLabel = Mono.Unix.Catalog.GetString("Exit");
        w2.Add(this.Exit, null);
        this.Run = new Gtk.Action("Run", Mono.Unix.Catalog.GetString("Run"), null, null);
        this.Run.ShortLabel = Mono.Unix.Catalog.GetString("Run");
        w2.Add(this.Run, null);
        this.MotionModel = new Gtk.Action("MotionModel", Mono.Unix.Catalog.GetString("Motion Model"), null, null);
        this.MotionModel.ShortLabel = Mono.Unix.Catalog.GetString("Motion Model");
        w2.Add(this.MotionModel, null);
        this.SingleStereoRayModel = new Gtk.Action("SingleStereoRayModel", Mono.Unix.Catalog.GetString("Single Stereo Ray Model"), null, null);
        this.SingleStereoRayModel.ShortLabel = Mono.Unix.Catalog.GetString("Single Stereo Ray Model");
        w2.Add(this.SingleStereoRayModel, null);
        this.StereoRaysAtVariousRanges = new Gtk.Action("StereoRaysAtVariousRanges", Mono.Unix.Catalog.GetString("Stereo Rays at various ranges"), null, null);
        this.StereoRaysAtVariousRanges.ShortLabel = Mono.Unix.Catalog.GetString("Stereo Rays at various ranges");
        w2.Add(this.StereoRaysAtVariousRanges, null);
        this.GaussianFunction = new Gtk.Action("GaussianFunction", Mono.Unix.Catalog.GetString("Gaussian Function"), null, null);
        this.GaussianFunction.ShortLabel = Mono.Unix.Catalog.GetString("Gaussian Function");
        w2.Add(this.GaussianFunction, null);
        this.SensorModelLookupGraphs = new Gtk.Action("SensorModelLookupGraphs", Mono.Unix.Catalog.GetString("Sensor Model lookup graphs"), null, null);
        this.SensorModelLookupGraphs.ShortLabel = Mono.Unix.Catalog.GetString("Sensor Model lookup graphs");
        w2.Add(this.SensorModelLookupGraphs, null);
        this.PathPlanner = new Gtk.Action("PathPlanner", Mono.Unix.Catalog.GetString("Path Planner"), null, null);
        this.PathPlanner.ShortLabel = Mono.Unix.Catalog.GetString("Path Planner");
        w2.Add(this.PathPlanner, null);
        w1.InsertActionGroup(w2, 0);
        this.AddAccelGroup(w1.AccelGroup);
        this.Name = "MainWindow";
        this.Title = Mono.Unix.Catalog.GetString("Sentience test programs");
        this.WindowPosition = ((Gtk.WindowPosition)(4));
        // Container child MainWindow.Gtk.Container+ContainerChild
        this.vbox1 = new Gtk.VBox();
        this.vbox1.Name = "vbox1";
        this.vbox1.Spacing = 6;
        // Container child vbox1.Gtk.Box+BoxChild
        w1.AddUiFromString("<ui><menubar name='menubar1'><menu action='File'><menuitem action='Exit'/></menu><menu action='Run'><menuitem action='MotionModel'/><menuitem action='SingleStereoRayModel'/><menuitem action='StereoRaysAtVariousRanges'/><menuitem action='GaussianFunction'/><menuitem action='SensorModelLookupGraphs'/><menuitem action='PathPlanner'/></menu></menubar></ui>");
        this.menubar1 = ((Gtk.MenuBar)(w1.GetWidget("/menubar1")));
        this.menubar1.Name = "menubar1";
        this.vbox1.Add(this.menubar1);
        Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox1[this.menubar1]));
        w3.Position = 0;
        w3.Expand = false;
        w3.Fill = false;
        // Container child vbox1.Gtk.Box+BoxChild
        this.imgOutput = new Gtk.Image();
        this.imgOutput.Name = "imgOutput";
        this.vbox1.Add(this.imgOutput);
        Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.vbox1[this.imgOutput]));
        w4.Position = 1;
        w4.Expand = false;
        w4.Fill = false;
        this.Add(this.vbox1);
        if ((this.Child != null)) {
            this.Child.ShowAll();
        }
        this.DefaultWidth = 622;
        this.DefaultHeight = 485;
        this.Show();
        this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
        this.MotionModel.Activated += new System.EventHandler(this.OnMotionModelActivated);
        this.SingleStereoRayModel.Activated += new System.EventHandler(this.OnSingleStereoRayModelActivated);
        this.StereoRaysAtVariousRanges.Activated += new System.EventHandler(this.OnStereoRaysAtVariousRangesActivated);
        this.GaussianFunction.Activated += new System.EventHandler(this.OnGaussianFunctionActivated);
        this.SensorModelLookupGraphs.Activated += new System.EventHandler(this.OnSensorModelLookupGraphsActivated);
        this.PathPlanner.Activated += new System.EventHandler(this.OnPathPlannerActivated);
    }
}
